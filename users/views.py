from django.shortcuts import render, redirect
from django.contrib.auth import login, authenticate, logout
from .forms import CustomUserCreationForm
from django.contrib.auth.forms import AuthenticationForm
from django.contrib.auth.decorators import login_required
from .models import CustomUser, ResetCode
from django.core.mail import send_mail
from django.utils import timezone
from datetime import timedelta
import random

# üîÅ –†”©–ª–≥–µ –±–∞–π–ª–∞–Ω—ã—Å—Ç—ã –±–∞“ì—ã—Ç—Ç–∞—É
@login_required
def role_redirect_view(request):
    if request.user.role == 'client':
        return redirect('place_order')
    elif request.user.role == 'courier':
        return redirect('courier_dashboard')
    elif request.user.role == 'shop_owner':
        return redirect('shop_orders')
    return redirect('admin:index')


# üìù –¢—ñ—Ä–∫–µ–ª—É
def register_view(request):
    if request.method == 'POST':
        form = CustomUserCreationForm(request.POST)
        if form.is_valid():
            user = form.save()
            login(request, user)
            return redirect('role_redirect')
    else:
        form = CustomUserCreationForm()
    return render(request, 'users/register.html', {'form': form})


# üîê –ö—ñ—Ä—É
def login_view(request):
    if request.method == 'POST':
        form = AuthenticationForm(request, data=request.POST)
        if form.is_valid():
            user = form.get_user()
            login(request, user)
            return redirect('role_redirect')
    else:
        form = AuthenticationForm()
    return render(request, 'users/login.html', {'form': form})


# üîì –®—ã“ì—É
def logout_view(request):
    logout(request)
    return redirect('login')


# üîê 1-“õ–∞–¥–∞–º: “ö“±–ø–∏—è—Å”©–∑–¥—ñ “õ–∞–ª–ø—ã–Ω–∞ –∫–µ–ª—Ç—ñ—Ä—É ‚Äî –∫–æ–¥ –∂—ñ–±–µ—Ä—É
def send_reset_code(request):
    if request.method == 'POST':
        email = request.POST.get('email')
        try:
            user = CustomUser.objects.get(email=email)

            # –ï—Å–∫—ñ –∫–æ–¥—Ç–∞—Ä–¥—ã ”©—à—ñ—Ä—É
            ResetCode.objects.filter(user=user).delete()

            # –ñ–∞“£–∞ –∫–æ–¥ –∂–∞—Å–∞—É
            code = str(random.randint(100000, 999999))
            ResetCode.objects.create(user=user, code=code, created_at=timezone.now())

            # Email –∂—ñ–±–µ—Ä—É
            send_mail(
                '“ö“±–ø–∏—è—Å”©–∑–¥—ñ “õ–∞–ª–ø—ã–Ω–∞ –∫–µ–ª—Ç—ñ—Ä—É',
                f'–°—ñ–∑–¥—ñ“£ —Ä–∞—Å—Ç–∞—É –∫–æ–¥—ã“£—ã–∑: {code}',
                'noreply@example.com',
                [email],
                fail_silently=False,
            )
            return render(request, 'users/verify_code.html', {'email': email})
        except CustomUser.DoesNotExist:
            return render(request, 'users/send_code.html', {'error': '–ë“±–ª email —Ç–∞–±—ã–ª–º–∞–¥—ã'})
    return render(request, 'users/send_code.html')


# üîê 2-“õ–∞–¥–∞–º: –ö–æ–¥—Ç—ã —Ç–µ–∫—Å–µ—Ä—É
def verify_code(request):
    if request.method == 'POST':
        email = request.POST.get('email')
        code = request.POST.get('code')
        try:
            user = CustomUser.objects.get(email=email)

            valid = ResetCode.objects.filter(
                user=user,
                code=code,
                created_at__gte=timezone.now() - timedelta(minutes=10)
            ).exists()

            if valid:
                # –ö–æ–¥ –∂–∞—Ä–∞–º–¥—ã, –∫–µ–ª–µ—Å—ñ “õ–∞–¥–∞–º“ì–∞ ”©—Ç–µ–º—ñ–∑
                return render(request, 'users/set_new_password.html', {'email': email})
            else:
                return render(request, 'users/verify_code.html', {
                    'email': email,
                    'error': '–ö–æ–¥ –¥“±—Ä—ã—Å –µ–º–µ—Å –Ω–µ–º–µ—Å–µ –º–µ—Ä–∑—ñ–º—ñ ”©—Ç—ñ–ø –∫–µ—Ç–∫–µ–Ω'
                })
        except CustomUser.DoesNotExist:
            return redirect('send_reset_code')
    return redirect('send_reset_code')


# üîê 3-“õ–∞–¥–∞–º: –ñ–∞“£–∞ “õ“±–ø–∏—è—Å”©–∑ –æ—Ä–Ω–∞—Ç—É
def set_new_password(request):
    if request.method == 'POST':
        email = request.POST.get('email')
        password = request.POST.get('password')
        try:
            user = CustomUser.objects.get(email=email)
            user.set_password(password)
            user.save()

            # –ö–æ–¥—Ç–∞—Ä–¥—ã –∂–æ—è–º—ã–∑
            ResetCode.objects.filter(user=user).delete()

            return redirect('login')
        except CustomUser.DoesNotExist:
            return redirect('send_reset_code')
    return redirect('send_reset_code')
